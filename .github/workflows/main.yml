# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      config: 'Release'

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101    

      # restore dependencies  
    - name: Install dependencies
      run: dotnet restore

      # build project
    - name: Build
      run: dotnet build --configuration $config --no-restore
      
      # run tests and generate coverage
    - name: Run Tests and Generate Coverage
      run: dotnet test /p:CollectCoverage=true /p:CoverletOutput=${{env.working-directory}} /p:CoverletOutputFormat=opencover
    
    - name: Codecov
      uses: codecov/codecov-action@v1.0.7
      with:
          # User defined upload name. Visible in Codecov UI
          name: POC
          # Repository upload token - get it from codecov.io. Required only for private repositories
          token: "a5ef9454-cbde-40f3-9fc1-f9ec7a27c64a"
          # Path to coverage file to upload
          file: ${{env.working-directory}}/coverage.opencover.xml
          # Flag upload to group coverage metrics (e.g. unittests | integration | ui,chrome)
          flags: unittests
          # Environment variables to tag the upload with (e.g. PYTHON | OS,PYTHON)
          env_vars: C#
          # Specify whether or not CI build should fail if Codecov runs into an error during upload
          fail_ci_if_error: true
      


